* Building a Vagrant Base Box
** Objective

   [[http://vagrantup.com][Vagrant]] provides examples of getting started using a base box named
   precise32. That box is available at this URL:
   http://files.vagrantup.com/precise32.box. This document describes
   how you can create your own "basebox," using Ubuntu's Saucy
   Salamander (13.10) (64 bit) as an example.

   It presumes you have Virtual Box and Vagrant installed, as well as
   a good network connection to retrieve an ISO for Saucy Salamander
   and packages that will end up on the machine (chef, puppet, ruby,
   etc).

   I used Virtual Box 4.3.4 and Vagrant 1.3.5.

** Installs and Downloads

   You'll need [[https://www.virtualbox.org/][Virtual Box]], [[http://www.vagrantup.com/][Vagrant]], and [[http://www.ubuntu.com/download/server][Ubuntu's server]].

** Resources

   I found the following helpful:

   + [[https://github.com/fespinoza/checklist_and_guides/wiki/Creating-a-vagrant-base-box-for-ubuntu-12.04-32bit-server][fespinoza's Checklist for a Basebox]]
   + [[http://docs-v1.vagrantup.com/v1/docs/base_boxes.html][Vagrant's v1 instructions for creating a Basebox]]

** Ubuntu Installation

   The first step is to create a Virtual Machine in Virtual Box that
   will be configured per Vagrant standards (has chef, puppet, has a
   user named "vagrant", configured so that =vagrant ssh= "just
   works", etc).

   These instructions configure them machine to use 512mb of memory
   and allow it to use up to 40gb of disk space. These numbers came
   from Vagrant's recommendations within their documentation.

   In general, Vagrant Boxes should be small when exported, but that
   wasn't a primary concern here. Instead, the main concern was "a
   strong foundation to grow on." This one ends up at around 700mb.

*** Setting Up Virtual Machine

  + Start Virtual Box UI.

  + Machine > New

    Enter Following and then Continue:

    |---------+------------------|
    | Name    | vagrant-saucy-64 |
    | Type    | Linux            |
    | Version | Ubuntu (64 bit)  |
    |---------+------------------|

  + Memory

    Enter Following and then Continue.

    |--------+--------|
    | Memory | 512 MB |
    |--------+--------|

  + Hard Drive

    + Select "Create a virtual hard drive now," and then Create.
    + Select VDI
    + Dynamically Allocated
    + Name of hard drive: =vagrant-saucy-64=
    + Size: 40 GB.

  + Once created, then select Settings.

    + Audio. Uncheck Enable Audio.
    + Ports. USB. Uncheck Enable USB.

  + Storage.

    + Add an attachment, a DVD Device.
    + Select the Downloaded Ubuntu ISO.

*** Ubuntu Install

    I followed through the screens, and entered:

  |---------------------+-----------------------|
  | Language            | English               |
  | Location            | United States         |
  | Keyboard            | Attempt Detection. us |
  | Hostname            | saucy64               |
  | Username            | vagrant               |
  | Account             | vagrant               |
  | Password            | vagrant               |
  | Encrypt Home?       | No                    |
  | Timezone            | Default. American/NYC |
  | Partitioning        | Entire Disk. Use LVM  |
  | Disk Setup          | Defaults              |
  | Proxy               | None                  |
  | Automatic Updates   | None                  |
  | Software to Install | None                  |
  | GRUB to Master?     | Yes                   |
  |---------------------+-----------------------|

*** Preparation

    Once the install has been completed, several manual steps are
    taken before the machine is exported as a Vagrant box.

    + Start up the virtual machine and login as vagrant/vagrant. Then,
      run the following:

#+BEGIN_SRC sh
  sudo groupadd admin
  sudo usermod -G admin vagrant
#+END_SRC

    + Add the following line to =/etc/sudoers= using =visudo=:

#+BEGIN_SRC
Defaults    env_keep="SSH_AUTH_SOCK"
#+END_SRC

    + And replace this:

#+BEGIN_SRC
%admin ALL=(ALL) ALL
#+END_SRC

    With:

#+BEGIN_SRC
%admin ALL=NOPASSWD: ALL
#+END_SRC

    + Then: =sudo apt-get -y update=
    + Then: =sudo apt-get -y install build-essential zlib1g-dev libssl-dev libreadlines6-dev libyaml-dev=
    + Then build the latest Ruby 2.0.0 from source, and install it at
      /usr/local/bin/ruby. This was p353 for me.

#+BEGIN_SRC sh
  apt-get -y update
  apt-get -y install build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev
  cd /tmp
  wget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz
  tar -xvfz ruby-2.0.0-p353.tar.gz
  cd ruby-2.0.0-p353/
  ./configure --prefix=/usr/local
  make
  sudo make install
#+END_SRC

    + Get chef:

#+BEGIN_SRC sh
  sudo gem install chef ruby-shadow --no-ri --no-rdoc
#+END_SRC

    + Get puppet:

#+BEGIN_SRC sh
  sudo apt-get -y install puppet puppetmaster
#+END_SRC

    + Get openssh-server:

#+BEGIN_SRC sh
  sudo apt-get -y install openssh-server
#+END_SRC

    + Enable "vagrant ssh" by setting up the VM so that it trusts the
      public vagrant key:

      Details: https://github.com/mitchellh/vagrant/tree/master/keys/

#+BEGIN_SRC sh
  mkdir ~/.ssh
  chmod 0700 ~/.ssh
  cd ~/.ssh
  wget http://github.com/mitchellh/vagrant/raw/master/keys/vagrant.pub
  mv vagrant.pub authorized_keys
  chmod 0644 authorized_keys
#+END_SRC

    + Virtual Box Guest Additions

      I think VirtualBox Guest Additions are enabled via dynamic
      kernel modules, so we need to install "dkms"

#+BEGIN_SRC sh
  sudo apt-get -y install linux-headers-$(uname -r) build-essential dkms
  sudo reboot
#+END_SRC

      Then, use Virtual Box itself to make the Guest Additions
      available as a CD/DVD. Follow the menus. One way is Devices >
      Install Guest Additions.

      Then, on the machine, run commands that mount the CD/DVD at
      =/media/cdrom=:

#+BEGIN_SRC sh
  sudo mount /dev/cdrom /media/cdrom
  sudo sh /media/cdrom/VBoxLinuxAdditions.run
#+END_SRC

    + Clean up any tmp files or unneeded packages:

#+BEGIN_SRC sh
  sudo apt-get clean
#+END_SRC

** Box Creation

   We have been working on a Virtual Machine that is named
   =vagrant-saucy-64= and we want to create a box named
   =saucy64.box=. I ran the following from my home directory:

   =vagrant package --base vagrant-saucy-64 --output saucy64.box=

   This creates a ~671mb file named =saucy64.box=. I noted the MD5 as
   =03d2fd3a48d8a63464bd61d39191ad45=

** Telling Vagrant about the Box

   =vagrant box add saucy64 saucy64.box=


** Host, somewhere.

   This particular box is available for download at
   https://s3.amazonaws.com/jedcn-dev-machines/saucy64.box. Once
   downloaded, you can run the =vagrant box add= command from above,
   and then setup your =Vagrantfile= to look like:

#+BEGIN_SRC ruby
  Vagrant.configure("2") do |config|
    # Every Vagrant virtual environment requires a box to build off of.
    config.vm.box = 'saucy64'
    config.vm.box_url = 'https://s3.amazonaws.com/jedcn-dev-machines/saucy64.box'
  end
#+END_SRC
